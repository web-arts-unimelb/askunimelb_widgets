<?php
/**
 * @file
 */

/**
 * Implements hook_enable().
 */
function askunimelb_widgets_enable() {
  drupal_set_message(t('ask.unimelb Widgets has now been enabled. You need to !configure the ask.unimelb Widgets block settings before you use it.', array('!configure' => l(t('configure and save'), 'admin/build/block'))));
}

/**
 * Implements hook_init().
 *
 * Push an empty entry to the front of the array. This ensures the behaviours
 * property always contain an array of objects, even if there is only a single
 * block on the page.
 */
function askunimelb_widgets_init() {
  drupal_add_js(array('askunimelb_widgets' => array(array('delta' => 'empty'))), 'setting');

  drupal_add_css(drupal_get_path('module', 'askunimelb_widgets') . '/askunimelb_widgets.theme.css');
}

/**
 * Implements hook_permission().
 */
function askunimelb_widgets_permission() {
  return array(
    'administer ask.unimelb widgets' => array(
      'title' => t('Administer ask.unimelb Widgets'),
    )
  );
}

/**
 * Implements hook_menu().
 */
function askunimelb_widgets_menu() {
  $items = array();
  $items['admin/settings/askunimelb_widgets'] = array(
    'title' => 'ask.unimelb Widgets',
    'description' => t('Configure ask.unimelb Widget settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('askunimelb_widgets_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer ask.unimelb widgets'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'askunimelb_widgets.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_block().
 */
function askunimelb_widgets_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      for ($delta = 0; $delta < variable_get('askunimelb_widgets_blocks', 1); $delta++) {
        $settings = variable_get('askunimelb_widgets_block_' . $delta, askunimelb_widgets_defaults($delta));
        $blocks[$delta]['info'] = $settings['description'];
        $blocks[$delta]['cache'] = DRUPAL_CACHE_PER_USER;
      }
      return $blocks;

    case 'configure':
      $settings = variable_get('askunimelb_widgets_block_' . $delta, askunimelb_widgets_defaults($delta));
      return askunimelb_widgets_block_settings_form($settings);

    case 'save':
      askunimelb_widgets_block_settings_save($delta, $edit);
      break;

    case 'view':
      // Add the javascript that defines a widget.
      _askunimelb_widgets_js_add($delta);

      // Output block HTML
      return array(
        'subject' => t('ask.unimelb Widget'),
        'content' => '<div id="askunimelb-widgets-widget-' . $delta . '"></div>',
      );
  }
}

/**
 * Implements hook_block_save().
 */
function askunimelb_widgets_block_settings_save($delta, $edit) {
  $settings = array(
    'description'     => $edit['description'],
    'p'               => array_filter($edit['p']),
    'q'               => check_plain($edit['q']),
    'c'               => check_plain($edit['c']),
    'search_box'      => $edit['search_box'],
    'number_answers'  => check_plain($edit['number_answers']),
    'truncate_size'   => check_plain($edit['truncate_size']),
    'desc'            => $edit['desc'],
    'navigation'      => $edit['navigation'],
    'target'          => $edit['target'],
    'persist_prodcat' => $edit['persist_prodcat'],
  );
  variable_set('askunimelb_widgets_block_' . $delta, $settings);
}


/**
 * Helper to add the required JS to the page.
 */
function _askunimelb_widgets_js_add($delta) {

  // Put the block configurations in a behaviour.
  //
  // We merge in an additional settings object on each call to block_view()
  // so that if a block is shown only for admins its settings are not disclosed
  // via behaviours to users that ought not be able to access them.
  $params = _askunimelb_widgets_js_settings($delta);
  drupal_add_js(array('askunimelb_widgets' => array($delta => $params)), 'setting');

  // Use a static here to determine whether more than one widget block is
  // to be shown. Only add the javascript files once.
  static $_askunimelb_widgets_processed;

  if (empty($_askunimelb_widgets_processed)) {
    // External library JavaScript.
    drupal_add_js('//studentadmin-unimelb.widget.custhelp.com/euf/rightnow/RightNow.Client.js', 'external', 'footer', FALSE, TRUE, FALSE);
    // Widget processor JavaScript.
    drupal_add_js(drupal_get_path('module', 'askunimelb_widgets') . '/askunimelb_widgets.js', 'module', 'footer', FALSE, TRUE, FALSE);

    $_askunimelb_widgets_processed = TRUE;
  }
}

/**
 * Helper that returns block settings for use in Drupal.behaviours.
 */
function _askunimelb_widgets_js_settings($delta) {
  static $widgets;

  if (!empty($widgets[$delta])) {
    return $widgets[$delta];
  }

  for ($i = 0; $i < variable_get('askunimelb_widgets_blocks', 1); $i++) {
    // Fetch settings for the current block.
    $settings = variable_get('askunimelb_widgets_block_' . $i, askunimelb_widgets_defaults($i));

    $params = array(
      'delta'           => $i,
      'p'               => implode(';', $settings['p']),
      'q'               => $settings['q'],
      'c'               => $settings['c'],
      'search_box'      => (empty($settings['search_box']) ? 'false' : 'true'),
      'number_answers'  => $settings['number_answers'],
      'truncate_size'   => $settings['truncate_size'],
      'description'     => (empty($settings['desc']) ? 'false' : 'true'),
      'navigation'      => (empty($settings['navigation']) ? 'false' : 'true'),
      'target'          => $settings['target'],
      'persist_prodcat' => (empty($settings['persist_prodcat']) ? 'false' : 'true'),
      'div_id'          => 'askunimelb-widgets-widget-' . $delta,
      'instance_id'     => 'skw_' . $delta,
      'module'          => 'KnowledgeSyndication',
      'type'            => 3
    );
    $widgets[$i] = $params;
  }

  // Return the block we wanted.
  return $widgets[$delta];
}

/**
 * Helper that returns an array of default settings.
 */
function askunimelb_widgets_defaults($delta = 0) {
  return array(
    'description'     => t('ask.unimelb Widget: Block @delta', array('@delta' => $delta)),
    'p'               => array('1301,1306' => '1301,1306'),
    'q'               => '',
    'c'               => '',
    'search_box'      => FALSE,
    'number_answers'  => 10,
    'truncate_size'   => 100,
    'desc'            => FALSE,
    'navigation'      => FALSE,
    'target'          => '_blank',
    'persist_prodcat' => TRUE,
  );
}

/**
 * Helper to list categories.
 */
function askunimelb_widgets_categories() {
  return array(
    '1301,1306' => t('Studying: Advice & Guidance'),
    '1301,1303' => t('Studying: Assessment & Results'),
    '1301,1307' => t('Studying: Learning Resources'),
    '1301,1304' => t('Studying: Special Consideration'),
    '1301,1302' => t('Studying: Exchange & Study Abroad'),
    '1301,1305' => t('Studying: Complaints & Grievances'),

    '1308,1313' => t('Managing my enrolment: My Details'),
    '1308,1311' => t('Managing my enrolment: Ongoing Enrolment'),
    '1308,1314' => t('Managing my enrolment: Timetables'),
    '1308,1310' => t('Managing my enrolment: Fees'),
    '1308,1312' => t('Managing my enrolment: Research Management'),
    '1308,1309' => t('Managing my enrolment: Taking a Break'),

    '1294,1299' => t('Getting help: IT Assistance'),
    '1294,1297' => t('Getting help: Getting Around & Locations'),
    '1294,1296' => t('Getting help: Finances & Scholarships'),
    '1294,1295' => t('Getting help: Accommodation & Housing'),
    '1294,1298' => t('Getting help: Health & Welfare'),
    '1294,1300' => t('Getting help: Legal Assistance'),

    '1289,1290' => t('Starting and completing: Enrolling in a New Course'),
    '1289,1291' => t('Starting and completing: Transferring to a New Course'),
    '1289,1292' => t('Starting and completing: Completing a Course'),
    '1289,1293' => t('Starting and completing: Academic Statements'),

    '1283,1285' => t('Extracurricular: Clubs & Societies'),
    '1283,1286' => t('Extracurricular: Sport & Fitness'),
    '1283,1288' => t('Extracurricular: Leadership & Volunteering'),
    '1283,1287' => t('Extracurricular: Jobs & Employment'),
    '1283,1284' => t('Extracurricular: Art & Culture'),

    '1315,1316' => t('Future study: Course Information'),
    '1315,1317' => t('Future study: Application & Admission'),
    '1315,1318' => t('Future study: More About Melbourne'),
  );
}

/**
 * Helper that returns a settings form for a block.
 */
function askunimelb_widgets_block_settings_form($settings) {
  $form['description'] = array(
    '#type' => 'textfield',
    '#title' => t('Block description'),
    '#default_value' => $settings['description'],
    '#description' => t('A brief description of your block. Used on the <a href="@block-overview-page">block overview page</a>.', array('@block-overview-page' => url('admin/build/block')))
  );
  $form['p'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Categories to display'),
    '#options' => askunimelb_widgets_categories(),
    '#default_value' => $settings['p'],
  );
  $form['q'] = array(
    '#type' => 'textfield',
    '#title' => t('Keyword'),
    '#default_value' => $settings['q'],
  );
  $form['c'] = array(
    '#type' => 'textfield',
    '#title' => t('Custom report'),
    '#default_value' => $settings['c'],
    '#disabled' => TRUE,
  );
  $form['search_box'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show search bar'),
    '#default_value' => $settings['search_box'],
  );
  $form['number_answers'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of FAQs'),
    '#default_value' => $settings['number_answers'],
    '#size' => 3,
    '#maxlength' => 3,
    '#description' => t('The width of the cloud menu in pixels.'),
  );
  $form['truncate_size'] = array(
    '#type' => 'textfield',
    '#title' => t('FAQ description truncation'),
    '#default_value' => $settings['truncate_size'],
    '#size' => 3,
    '#maxlength' => 4,
    '#description' => t('The height of the cloud menu in pixels.'),
  );
  $form['desc'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show FAQ description'),
    '#default_value' => $settings['desc'],
  );
  $form['navigation'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show "more" link'),
    '#default_value' => $settings['navigation'],
  );
  $form['target'] = array(
    '#type' => 'select',
    '#title' => t('FAQ link target'),
    '#default_value' => $settings['target'],
    '#options' => array(
      '_self' => t('Current window or tab'),
      '_blank' => t('New window or tab'),
    ),
  );
  $form['persist_prodcat'] = array(
    '#type' => 'checkbox',
    '#title' => t('Persist with categories across searches'),
    '#default_value' => $settings['persist_prodcat'],
  );
  return $form;
}
